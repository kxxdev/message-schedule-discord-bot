import {
  Interaction,
  Message,
  MessageEmbed
} from 'discord.js';

import {
  MessageButtonStyles,
  MessageChannelOptions 
} from "./enums";

export interface InteractionButtonPagesOptions {
  embeds?: MessageEmbed[];
  ephemeral?: boolean | false;
  duration?: number | 30000;
  countPage?: boolean | true;
  label?: string[];
  emoji?: string[];
  color?: MessageButtonStyles[];
}

export interface InteractionReactionPagesOptions {
  embeds?: MessageEmbed[];
  duration?: number | 30000;
  countPage?: boolean | true;
  emoji?: string[];
}

export interface MessageButtonPagesOptions {
  embeds?: MessageEmbed[];
  channel?: string | "CHANNEL";
  messageDM?: string | null;
  replyMention?: boolean | true;
  reply?: boolean | false;
  duration?: number | 30000;
  countPage?: boolean | true;
  label?: string[];
  emoji?: string[];
  color?: MessageButtonStyles[];
}

export interface MessageReactionPagesOptions {
  embeds?: MessageEmbed[];
  replyMention?: boolean | true;
  reply?: boolean | false;
  duration?: number | 30000;
  countPage?: boolean | true;
  emoji?: string[];
}

export class InteractionButtonPages {
  public constructor(data?: InteractionButtonPages | InteractionButtonPagesOptions);

  public embeds: MessageEmbed[];
  public ephemeral: boolean;
  public duration: number | 30000;
  public countPage: boolean | true;
  public label: string[];
  public emoji: string[];
  public color: MessageButtonStyles[];

  public setEmbeds(embed: MessageEmbed): this[];
  public setEphemeral(ephemeral: boolean): this;
  public setDuration(time: number): this;
  public setCountPage(count: boolean): this;
  public setLabelButton(label: string): this[];
  public setEmojiButton(emojiPrevious?: string, emojiStop?: string, emojiNext?: string): this[];
  public setColorButton(colorPrevious?: MessageButtonStyles, colorStop?: MessageButtonStyles, colorNext?: MessageButtonStyles): this[];
  public build(interaction: Interaction): this;
  public toJSON(): InteractionButtonPages;
}

export class InteractionReactionPages {
  public constructor(data?: InteractionReactionPages | InteractionReactionPagesOptions);

  public embeds: MessageEmbed[];
  public duration: number | 30000;
  public countPage: boolean | true;
  public emoji: string[];

  public setEmbeds(embed: MessageEmbed): this[];
  public setDuration(time: number): this;
  public setCountPage(count: boolean): this;
  public setEmojiReaction(emojiPrevious?: string, emojiStop?: string, emojiNext?: string): this[];
  public build(interaction: Interaction): this;
  public toJSON(): InteractionReactionPages;
}

export class MessageButtonPages {
  public constructor(data?: MessageButtonPages | MessageButtonPagesOptions);

  public embeds: MessageEmbed[];
  public channel: string | "CHANNEL";
  public messageDM: string | null;
  public replyMention: boolean | true;
  public reply: boolean | false;
  public duration: number | 30000;
  public countPage: boolean | true;
  public label: string[];
  public emoji: string[];
  public color: MessageButtonStyles[];

  public setEmbeds(embed: MessageEmbed): this[];
  public setChannel(channel: MessageChannelOptions): this;
  public setMessageDM(text: string): this;
  public setReply(reply: boolean, replyMention?: boolean): this;
  public setDuration(time: number): this;
  public setCountPage(count: boolean): this;
  public setLabelButton(label: string): this[];
  public setEmojiButton(emojiPrevious?: string, emojiStop?: string, emojiNext?: string): this[];
  public setColorButton(colorPrevious?: MessageButtonStyles, colorStop?: MessageButtonStyles, colorNext?: MessageButtonStyles): this[];
  public build(message: Message): this;
  public toJSON(): MessageButtonPages;
}

export class MessageReactionPages {
  public constructor(data?: MessageReactionPages | MessageReactionPagesOptions);

  public embeds: MessageEmbed[];
  public replyMention: boolean | true;
  public reply: boolean | false;
  public duration: number | 30000;
  public countPage: boolean | true;
  public emoji: string[];

  public setEmbeds(embed: MessageEmbed): this[];
  public setReply(reply: boolean, replyMention?: boolean): this;
  public setDuration(time: number): this;
  public setCountPage(count: boolean): this;
  public setEmojiReaction(emojiPrevious?: string, emojiStop?: string, emojiNext?: string): this[];
  public build(message: Message): this;
  public toJSON(): MessageReactionPages;
}